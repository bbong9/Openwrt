# 极简轻量版（保留广告规则）
# 目标：足够好用 + 低负载。仅保留核心分流与必要规则。

# ========== 订阅与静态节点 ==========
proxy-providers:
  皮:
    url: ""          # ← 填你的订阅
    type: http
    interval: 86400
    health-check: { enable: true, url: https://www.gstatic.com/generate_204, interval: 300 }
    proxy: 直连
  精灵:
    url: ""          # ← 填你的订阅
    type: http
    interval: 86400
    health-check: { enable: true, url: https://www.gstatic.com/generate_204, interval: 300 }
    proxy: 直连

proxies:
  - { name: 直连, type: direct }

# ========== 入站端口 ==========
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: "off"
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false

# ========== 控制面板（默认仅本机） ==========
external-controller: 127.0.0.1:9090
secret: "请改为强密码"
external-ui: "/etc/nikki/run"
external-ui-name: zashboard
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# ========== 嗅探（修复只显示 IP 无法匹配规则） ==========
sniffer:
  enable: true
  parse-pure-ip: true
  force-dns-mapping: true
  sniff:
    HTTP: { ports: [80, 8080-8880], override-destination: true }
    TLS:  { ports: [443, 8443],     override-destination: true }
    QUIC: { ports: [443, 8443],     override-destination: true }
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"

# ========== TUN ==========
tun:
  enable: true
  stack: mixed
  dns-hijack:
    - 198.18.0.1:53
    - tcp://198.18.0.1:53
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# ========== DNS（精简稳妥） ==========
dns:
  enable: true
  listen: 127.0.0.1:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.0/16
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain"
    - "rule-set:cn_domain"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
    - "+.market.xiaomi.com"
  default-nameserver:
    - 223.5.5.5
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
    - https://1.1.1.1/dns-query
    - https://8.8.8.8/dns-query
  nameserver:
    - 211.137.130.3
    - 211.137.130.19
  nameserver-policy:
    "geosite:geolocation-!cn":
      - https://1.1.1.1/dns-query
      - https://8.8.8.8/dns-query
    "geosite:cn":
      - 211.137.130.3
      - 211.137.130.19

# ========== 面板缓存 ==========
profile:
  store-selected: true
  store-fake-ip: true

# ========== 出站策略组 ==========
proxy-groups:
  # 常用选择
  - { name: 🚀 默认代理, type: select, proxies: [🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, 🔯 香港故转, ♻️ 自动选择, 🌐 全部节点, 直连] }
  - { name: 🤖 ChatGPT,  type: select, proxies: [🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, 🔯 香港故转, ♻️ 自动选择, 🌐 全部节点, 直连] }
  - { name: 🍀 Google,   type: select, proxies: [🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, 🔯 香港故转, ♻️ 自动选择, 🌐 全部节点, 直连] }
  - { name: 📹 YouTube,  type: select, proxies: [🔯 狮城故转, 🔯 日本故转, 🔯 美国故转, 🔯 香港故转, ♻️ 自动选择, 🌐 全部节点, 直连] }
  - { name: 👨🏿‍💻 GitHub, type: select, proxies: [🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, 🔯 香港故转, ♻️ 自动选择, 🌐 全部节点, 直连] }
  - { name: 📲 Telegram, type: select, proxies: [🔯 狮城故转, 🔯 日本故转, 🔯 美国故转, 🔯 香港故转, ♻️ 自动选择, 🌐 全部节点, 直连] }
  - { name: 🎯 直连,     type: select, proxies: [直连, 🚀 默认代理] }
  - { name: 🐟 漏网之鱼, type: select, proxies: [🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, 🔯 香港故转, ♻️ 自动选择, 🌐 全部节点, 直连] }

  # 地区聚合（仅 fallback，低抖动）
  - { name: 🔯 日本故转, type: fallback, include-all: true, tolerance: 12, interval: 300, filter: "(?i)(日|jp|japan|🇯🇵)" }
  - { name: 🔯 狮城故转, type: fallback, include-all: true, tolerance: 12, interval: 300, filter: "(?i)(新|sg|singapore|🇸🇬)" }
  - { name: 🔯 美国故转, type: fallback, include-all: true, tolerance: 12, interval: 300, filter: "(?i)(美|us|united|states|usa|america|🇺🇸)" }
  - { name: 🔯 香港故转, type: fallback, include-all: true, tolerance: 12, interval: 300, filter: "(?i)(港|hk|hong|🇭🇰)" }

  # 单一自动测速（全量节点），减少健康检查负担
  - { name: ♻️ 自动选择, type: url-test, include-all: true, interval: 300, tolerance: 20, filter: "^((?!(直连)).)*$" }
  - { name: 🌐 全部节点, type: select, include-all: true }
  - { name: 🆎  ADBlock,  type: select, proxies: [REJECT, 🎯 直连] }

# ========== 规则 ==========
rules:
  # 个性化直连 / 白名单（按需保留/增减）
  - IP-CIDR,144.34.230.131/32,🎯 直连
  - IP-CIDR,47.76.58.115/32,🎯 直连
  - IP-CIDR,46.232.107.30/32,🎯 直连
  - IP-CIDR,23.146.72.187/32,🎯 直连
  - DOMAIN-SUFFIX,bbong9.cn,🎯 直连
  - DOMAIN,younoyes.com,🎯 直连

  # 通用直连（时间同步 / 通话）
  - DST-PORT,123,🎯 直连
  - DOMAIN,stun.l.google.com,🎯 直连
  - DOMAIN-KEYWORD,stun,🎯 直连

  # 常用业务（精简保留）
  - RULE-SET,ai,🤖 ChatGPT
  - RULE-SET,google_domain,🍀 Google
  - RULE-SET,youtube_domain,📹 YouTube
  - RULE-SET,github_domain,👨🏿‍💻 GitHub
  - RULE-SET,telegram_domain,📲 Telegram

  # 广告拦截
  - RULE-SET,Advertising_domain,🆎  ADBlock

  # 基础地理路由
  - RULE-SET,private_domain,直连
  - RULE-SET,gfw_domain,🚀 默认代理
  - RULE-SET,geolocation-!cn,🚀 默认代理
  - RULE-SET,cn_domain,🎯 直连

  - MATCH,🐟 漏网之鱼

# ========== 规则集锚点 ==========
rule-anchor:
  ip:      &ip      { type: http, interval: 86400, behavior: ipcidr,   format: mrs }
  domain:  &domain  { type: http, interval: 86400, behavior: domain,   format: mrs }
  class:   &class   { type: http, interval: 86400, behavior: classical, format: text }
  class2:  &class2  { type: http, interval: 86400, behavior: classical, format: yaml }
  domain2: &domain2 { type: http, interval: 86400, behavior: domain,   format: yaml }

# ========== 规则集来源（统一 gh-proxy） ==========
rule-providers:
  private_domain:    { <<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/private.mrs",          path: ./ruleset/private.mrs }
  ai:                { <<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-!cn.mrs",  path: ./ruleset/chatgpt.mrs }
  google_domain:     { <<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/google.mrs",           path: ./ruleset/google.mrs }
  youtube_domain:    { <<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/youtube.mrs",          path: ./ruleset/youtube.mrs }
  github_domain:     { <<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/github.mrs",           path: ./ruleset/github.mrs }
  telegram_domain:   { <<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/telegram.mrs",         path: ./ruleset/telegram.mrs }
  gfw_domain:        { <<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/gfw.mrs",              path: ./ruleset/gfw.mrs }
  geolocation-!cn:   { <<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/geolocation-!cn.mrs",  path: ./ruleset/geolocation-not-cn.mrs }
  cn_domain:         { <<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/cn.mrs",               path: ./ruleset/cn.mrs }
  Advertising_domain:{ <<: *domain2, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Advertising/Advertising_Domain.yaml", path: ./ruleset/Adblock.yaml }
