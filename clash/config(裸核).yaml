# === FINAL v2 (2025-08-08 JST) | 裸核 + nikki ===
# 目标：精简 / 稳定 / 低开销；修复域名嗅探与规则命中；适配面板

# ---------------- 订阅与静态节点 ----------------
proxy-providers:
  皮:
    url: ""                      # ← 填你的订阅
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连                  # 拉不动再改 🚀 默认代理
  精灵:
    url: ""                      # ← 填你的订阅
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连

proxies:
  - name: 直连
    type: direct

# ---------------- 入站端口 ----------------
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: "off"
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false

# ---------------- 控制面板（默认仅本机） ----------------
external-controller: 127.0.0.1:9090
secret: "请改为强密码"
external-ui: "/etc/nikki/run"
external-ui-name: zashboard
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# ---------------- 嗅探（修复只显示 IP 无法匹配规则） ----------------
sniffer:
  enable: true
  parse-pure-ip: true
  force-dns-mapping: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
      override-destination: true
    # QUIC:
    #   ports: [443, 8443]
    #   override-destination: true   # 如需再开，先观察 CPU/稳定性
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"

# ---------------- TUN ----------------
tun:
  enable: true
  stack: mixed
  dns-hijack:
    - 198.18.0.1:53
    - tcp://198.18.0.1:53
  auto-route: true
  auto-redirect: false      # ← 关闭，避免与 TUN 路由重复
  auto-detect-interface: true

# ---------------- DNS（精简稳妥） ----------------
dns:
  enable: true
  listen: 127.0.0.1:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.0/16
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain"
    - "rule-set:cn_domain"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
    - "+.market.xiaomi.com"
  default-nameserver:
    - 223.5.5.5
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
    - https://1.1.1.1/dns-query
    - https://8.8.8.8/dns-query
  nameserver:
    - 211.137.130.3
    - 211.137.130.19
    - 119.29.29.29
    - 114.114.114.114
  nameserver-policy:
    "rule-set:geolocation-!cn":
      - https://1.1.1.1/dns-query
      - https://8.8.8.8/dns-query
    "rule-set:cn_domain":
      - 211.137.130.3
      - 211.137.130.19
      - 119.29.29.29
      - 114.114.114.114

# ---------------- 面板缓存 ----------------
profile:
  store-selected: true
  store-fake-ip: true

# ---------------- 出站策略组 ----------------
proxy-groups:
  # 顶层常用选择
  - name: 🚀 默认代理
    type: select
    proxies: [🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, 🔯 香港故转, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, ♻️ 香港自动, ♻️ 自动选择, 🌐 全部节点, 直连]
  - name: 📹 YouTube
    type: select
    proxies: [🔯 狮城故转, 🔯 日本故转, 🔯 美国故转, 🔯 香港故转, ♻️ 狮城自动, ♻️ 日本自动, ♻️ 美国自动, ♻️ 香港自动, ♻️ 自动选择, 🌐 全部节点, 直连]
  - name: 🍀 Google
    type: select
    proxies: [🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, 🔯 香港故转, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, ♻️ 香港自动, ♻️ 自动选择, 🌐 全部节点, 直连]
  - name: 🤖 ChatGPT
    type: select
    proxies: [🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, 🔯 香港故转, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, ♻️ 香港自动, ♻️ 自动选择, 🌐 全部节点, 直连]
  - name: 👨🏿‍💻 GitHub
    type: select
    proxies: [🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, 🔯 香港故转, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, ♻️ 香港自动, ♻️ 自动选择, 🌐 全部节点, 直连]
  - name: 📲 Telegram
    type: select
    proxies: [🔯 狮城故转, 🔯 日本故转, 🔯 美国故转, 🔯 香港故转, ♻️ 狮城自动, ♻️ 日本自动, ♻️ 美国自动, ♻️ 香港自动, ♻️ 自动选择, 🌐 全部节点, 直连]
  - name: 🎥 NETFLIX
    type: select
    proxies: [🔯 美国故转, 🔯 日本故转, 🔯 狮城故转, 🔯 香港故转, ♻️ 美国自动, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 香港自动, ♻️ 自动选择, 🌐 全部节点, 直连]
  - name: ✈️ Speedtest
    type: select
    proxies: [直连, 🔯 香港故转, 🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, ♻️ 自动选择, 🌐 全部节点]
  - name: 🎮 Steam
    type: select
    proxies: [直连, 🚀 默认代理]
  - name: 🍎 Apple
    type: select
    proxies: [直连, 🚀 默认代理]
  - name: 🎯 直连
    type: select
    proxies: [直连, 🚀 默认代理]
  - name: 🐟 漏网之鱼
    type: select
    proxies: [🔯 日本故转, 🔯 狮城故转, 🔯 美国故转, 🔯 香港故转, ♻️ 日本自动, ♻️ 狮城自动, ♻️ 美国自动, ♻️ 香港自动, ♻️ 自动选择, 🌐 全部节点, 直连]

  # 地区聚合（故转=fallback；tolerance 收紧为 12；可选 lazy: true）
  - name: 🔯 日本故转
    type: fallback
    include-all: true
    tolerance: 12
    interval: 300
    lazy: true
    filter: "(?i)(日|jp|japan|🇯🇵)"
  - name: 🔯 狮城故转
    type: fallback
    include-all: true
    tolerance: 12
    interval: 300
    lazy: true
    filter: "(?i)(新|sg|singapore|🇸🇬)"
  - name: 🔯 美国故转
    type: fallback
    include-all: true
    tolerance: 12
    interval: 300
    lazy: true
    filter: "(?i)(美|us|united|states|usa|america|🇺🇸)"
  - name: 🔯 香港故转
    type: fallback
    include-all: true
    tolerance: 12
    interval: 300
    lazy: true
    filter: "(?i)(港|hk|hong|🇭🇰)"

  # 自动测速（统一补测速 URL）
  - name: ♻️ 日本自动
    type: url-test
    include-all: true
    url: https://chatgpt.com/cdn-cgi/trace
    interval: 300
    tolerance: 20
    filter: "(?i)(日|jp|japan|🇯🇵)"
  - name: ♻️ 狮城自动
    type: url-test
    include-all: true
    url: https://chatgpt.com/cdn-cgi/trace
    interval: 300
    tolerance: 20
    filter: "(?i)(新|sg|singapore|🇸🇬)"
  - name: ♻️ 美国自动
    type: url-test
    include-all: true
    url: https://chatgpt.com/cdn-cgi/trace
    interval: 300
    tolerance: 20
    filter: "(?i)(美|us|united|states|usa|america|🇺🇸)"
  - name: ♻️ 香港自动
    type: url-test
    include-all: true
    url: https://chatgpt.com/cdn-cgi/trace
    interval: 300
    tolerance: 20
    filter: "(?i)(港|hk|hong|🇭🇰)"
  - name: ♻️ 自动选择
    type: url-test
    include-all: true
    url: https://chatgpt.com/cdn-cgi/trace
    interval: 300
    tolerance: 20
    filter: "^((?!(直连)).)*$"
  - name: 🌐 全部节点
    type: select
    include-all: true
  - name: 🆎  ADBlock
    type: select
    proxies: [REJECT, 🎯 直连]

# ---------------- 规则匹配 ----------------
rules:
  # 私网/多播直连（避免内网、投屏、mDNS 走代理）
  - IP-CIDR,10.0.0.0/8,🎯 直连,no-resolve
  - IP-CIDR,172.16.0.0/12,🎯 直连,no-resolve
  - IP-CIDR,192.168.0.0/16,🎯 直连,no-resolve
  - IP-CIDR,127.0.0.0/8,🎯 直连,no-resolve
  - IP-CIDR,224.0.0.0/4,🎯 直连,no-resolve
  - IP-CIDR,240.0.0.0/4,🎯 直连,no-resolve
  - DST-PORT,1900,🎯 直连
  - DST-PORT,5353,🎯 直连

  # 个性化直连 / 白名单
  - IP-CIDR,144.34.230.131/32,🎯 直连
  - IP-CIDR,47.76.58.115/32,🎯 直连
  - IP-CIDR,46.232.107.30/32,🎯 直连
  - IP-CIDR,23.146.72.187/32,🎯 直连
  - DOMAIN-SUFFIX,bbong9.cn,🎯 直连
  - DOMAIN,younoyes.com,🎯 直连

  # 通用直连（NTP / STUN）
  - DST-PORT,123,🎯 直连
  - DOMAIN,stun.l.google.com,🎯 直连
  - DOMAIN-KEYWORD,stun,🎯 直连

  # 业务优先（放在大规则前）
  - RULE-SET,WindowsUpdate,🎯 直连
  - RULE-SET,OneDrive,🚀 默认代理
  - RULE-SET,Microsoft,🚀 默认代理

  - RULE-SET,github_domain,👨🏿‍💻 GitHub
  - RULE-SET,youtube_domain,📹 YouTube
  - RULE-SET,google_domain,🍀 Google
  - RULE-SET,netflix_domain,🎥 NETFLIX
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,speedtest_domain,✈️ Speedtest
  - RULE-SET,ai,🤖 ChatGPT
  - RULE-SET,proxylite,🚀 默认代理
  - RULE-SET,Apple-CN,🍎 Apple
  - RULE-SET,Apple,🍎 Apple
  - RULE-SET,Advertising_domain,🆎  ADBlock
  - RULE-SET,Steam,🎮 Steam

  # 地理 / 基础
  - RULE-SET,private_domain,直连
  - RULE-SET,gfw_domain,🚀 默认代理
  - RULE-SET,geolocation-!cn,🚀 默认代理
  - RULE-SET,PTPROXY,🚀 默认代理
  - RULE-SET,cn_domain,🎯 直连
  - RULE-SET,cn_ip,🎯 直连

  # IP 类直连（特服）
  - RULE-SET,google_ip,🍀 Google,no-resolve
  - RULE-SET,netflix_ip,🎥 NETFLIX,no-resolve
  - RULE-SET,telegram_ip,📲 Telegram,no-resolve
  - RULE-SET,PTDIRECT,🎯 直连

  - MATCH,🐟 漏网之鱼

# ---------------- 规则集锚点 ----------------
rule-anchor:
  ip:      &ip      {type: http, interval: 86400, behavior: ipcidr,   format: mrs}
  domain:  &domain  {type: http, interval: 86400, behavior: domain,   format: mrs}
  class:   &class   {type: http, interval: 86400, behavior: classical, format: text}
  class2:  &class2  {type: http, interval: 86400, behavior: classical, format: yaml}
  domain2: &domain2 {type: http, interval: 86400, behavior: domain,   format: yaml}

# ---------------- 规则集来源（已统一 gh-proxy 前缀） ----------------
rule-providers:
  private_domain:     {<<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/private.mrs",                   path: ./ruleset/private.mrs}
  Advertising_domain: {<<: *class2,  url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Advertising/Advertising_Domain.yaml", path: ./ruleset/Adblock1.yaml}
  proxylite:          {<<: *class,   url: "https://gh-proxy.com/raw.githubusercontent.com/qichiyuhub/rule/refs/heads/main/proxy.list",                              path: ./ruleset/proxylite.list}

  Apple-CN:           {<<: *domain,  url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple-cn.mrs",                  path: ./ruleset/APPLECN.mrs}
  Apple:              {<<: *domain,  url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple.mrs",                     path: ./ruleset/APPLE.mrs}
  ai:                 {<<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-!cn.mrs",           path: ./ruleset/chatgpt.mrs}
  youtube_domain:     {<<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/youtube.mrs",                   path: ./ruleset/youtube.mrs}
  google_domain:      {<<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/google.mrs",                    path: ./ruleset/google.mrs}
  github_domain:      {<<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/github.mrs",                    path: ./ruleset/github.mrs}
  telegram_domain:    {<<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/telegram.mrs",                  path: ./ruleset/telegram.mrs}
  netflix_domain:     {<<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/netflix.mrs",                   path: ./ruleset/netflix.mrs}
  speedtest_domain:   {<<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/ookla-speedtest.mrs",           path: ./ruleset/ookla-speedtest.mrs}
  gfw_domain:         {<<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/gfw.mrs",                       path: ./ruleset/gfw.mrs}
  geolocation-!cn:    {<<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/geolocation-!cn.mrs",           path: ./ruleset/geolocation-not-cn.mrs}
  cn_domain:          {<<: *domain,  url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/cn.mrs",                        path: ./ruleset/cn.mrs}

  cn_ip:              {<<: *ip,      url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geoip/cn.mrs",                          path: ./ruleset/cn_ip.mrs}
  google_ip:          {<<: *ip,      url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geoip/google.mrs",                      path: ./ruleset/google_ip.mrs}
  telegram_ip:        {<<: *ip,      url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geoip/telegram.mrs",                    path: ./ruleset/telegram_ip.mrs}
  netflix_ip:         {<<: *ip,      url: "https://gh-proxy.com/github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geoip/netflix.mrs",                     path: ./ruleset/netflix_ip.mrs}
  Steam:              {<<: *domain,  url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/steam.mrs",                     path: ./ruleset/steam.mrs}

  PTDIRECT:           {<<: *class2,  url: "https://gh-proxy.com/raw.githubusercontent.com/bbong9/Openwrt/refs/heads/main/PT/PT-DIRECT.yaml",                        path: ./ruleset/PT-DIRECT.yaml}
  PTPROXY:            {<<: *class2,  url: "https://gh-proxy.com/raw.githubusercontent.com/bbong9/Openwrt/refs/heads/main/PT/PT-PROXY.yaml",                         path: ./ruleset/PT-PROXY.yaml}

  # 微软与开发下载（高性价比）
  Microsoft:          {<<: *class2,  url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.yaml", path: ./ruleset/Microsoft.yaml}
  OneDrive:           {<<: *class2,  url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OneDrive/OneDrive.yaml",   path: ./ruleset/OneDrive.yaml}
  WindowsUpdate:      {<<: *class2,  url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/WindowsUpdate/WindowsUpdate.yaml", path: ./ruleset/WindowsUpdate.yaml}
  Docker:             {<<: *class2,  url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Docker/Docker.yaml",       path: ./ruleset/Docker.yaml}
  NPM:                {<<: *class2,  url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/NPM/NPM.yaml",             path: ./ruleset/NPM.yaml}
  PyPI:               {<<: *class2,  url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PyPI/PyPI.yaml",           path: ./ruleset/PyPI.yaml}
  Homebrew:           {<<: *class2,  url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Homebrew/Homebrew.yaml",   path: ./ruleset/Homebrew.yaml}
