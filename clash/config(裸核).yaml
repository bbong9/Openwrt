# ===== Nikki 裸核 · 精简稳跑（IPv4-only·最终版） =====

# ---------- 机场订阅 ----------
proxy-providers:
  地址一:
    url: "你的订阅地址1"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连

  地址二:
    url: "你的订阅地址2"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连

# ---------- 静态节点 ----------
proxies:
  - name: 直连
    type: direct

# ---------- 端口与通用设置 ----------
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894

allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: off
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false

# ---------- 控制面板（裸核 + nikki） ----------
# 若需局域网访问务必设置强口令；如仅本机访问，把 external-controller 改为 127.0.0.1:9090
external-controller: 0.0.0.0:9090
secret: ""
external-ui: "/etc/nikki/run"
external-ui-name: "zashboard-gh-pages"  # 确认为解压后的实际目录名
external-ui-url: "https://gh-proxy.com/github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# ---------- 嗅探 ----------
sniffer:
  enable: true
  # 新增两行：把“纯 IP 连接”也映射回域名用于规则匹配
  parse-pure-ip: true
  force-dns-mapping: true

  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
      override-destination: true     # ← 新增
    QUIC:
      ports: [443, 8443]
      override-destination: true     # ← 新增

  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"


# ---------- TUN（根据 PMTU=1492 配置） ----------
tun:
  enable: true
  stack: mixed
  mtu: 1472
  dns-hijack:
    - 198.18.0.1:53
    - tcp://198.18.0.1:53
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# ---------- DNS（国际 DoH + 国内运营商；标准 fake-ip 网段） ----------
dns:
  enable: true
  listen: 127.0.0.1:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.0/16
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain,cn_domain"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
    - "+.market.xiaomi.com"

  default-nameserver:
    - 223.5.5.5

  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
    - https://1.1.1.1/dns-query
    - https://8.8.8.8/dns-query

  nameserver:
    - 211.137.130.3
    - 211.137.130.19

  nameserver-policy:
    "geosite:geolocation-!cn":
      - https://1.1.1.1/dns-query
      - https://8.8.8.8/dns-query
    "geosite:cn":
      - 运行商dns
      - 运行商dns

# ---------- 面板缓存 ----------
profile:
  store-selected: true
  store-fake-ip: true

# ---------- 分组 ----------
proxy-groups:
  - name: 🚀 默认代理
    type: select
    proxies:
      - 🔯 香港故转
      - 🔯 日本故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🌐 全部节点
      - 直连

  - name: 📹 YouTube
    type: select
    proxies:
      - 🔯 美国故转
      - 🔯 香港故转
      - 🔯 日本故转
      - 🔯 狮城故转
      - ♻️ 美国自动
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 自动选择
      - 🌐 全部节点
      - 直连

  - name: 🍀 Google
    type: select
    proxies:
      - 🔯 香港故转
      - 🔯 日本故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🌐 全部节点
      - 直连

  - name: 🤖 ChatGPT
    type: select
    proxies:
      - 🔯 日本故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🌐 全部节点
      - 直连

  - name: 👨🏿‍💻 GitHub
    type: select
    proxies:
      - 🔯 香港故转
      - 🔯 日本故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🌐 全部节点
      - 直连

  - name: 📲 Telegram
    type: select
    proxies:
      - 🔯 香港故转
      - 🔯 日本故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🌐 全部节点
      - 直连

  - name: 🎥 NETFLIX
    type: select
    proxies:
      - 🔯 狮城故转
      - 🔯 香港故转
      - 🔯 日本故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🌐 全部节点
      - 直连

  - name: ✈️ Speedtest
    type: select
    proxies:
      - 🔯 香港故转
      - 🔯 日本故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🌐 全部节点
      - 直连

  - name: 🎮 Steam
    type: select
    proxies: [直连, 🚀 默认代理]

  - name: 🍎 Apple
    type: select
    proxies: [直连, 🚀 默认代理]

  - name: 🎯 直连
    type: select
    proxies: [直连, 🚀 默认代理]

  - name: 🐟 漏网之鱼
    type: select
    proxies:
      - 🔯 香港故转
      - 🔯 日本故转
      - 🔯 狮城故转
      - 🔯 美国故转
      - ♻️ 香港自动
      - ♻️ 日本自动
      - ♻️ 狮城自动
      - ♻️ 美国自动
      - ♻️ 自动选择
      - 🌐 全部节点
      - 直连

  # —— 国家定向（故转 = 更稳；自动 = 更快）——
  - name: 🔯 香港故转
    type: fallback
    include-all: true
    url: https://www.gstatic.com/generate_204
    interval: 300
    tolerance: 12
    lazy: true
    filter: "(?i)(🇭🇰|\\bHK\\b|Hong\\s?Kong|香港)"

  - name: 🔯 日本故转
    type: fallback
    include-all: true
    url: https://www.gstatic.com/generate_204
    interval: 300
    tolerance: 12
    lazy: true
    filter: "(?i)(🇯🇵|\\bJP\\b|Japan|日本)"

  - name: 🔯 狮城故转
    type: fallback
    include-all: true
    url: https://www.gstatic.com/generate_204
    interval: 300
    tolerance: 12
    lazy: true
    filter: "(?i)(🇸🇬|\\bSG\\b|Singapore|新加坡|狮城)"

  - name: 🔯 美国故转
    type: fallback
    include-all: true
    url: https://www.gstatic.com/generate_204
    interval: 300
    tolerance: 12
    lazy: true
    filter: "(?i)(🇺🇸|\\bUS(A)?\\b|United\\s?States|America|美国)"

  - name: ♻️ 香港自动
    type: url-test
    include-all: true
    url: https://www.gstatic.com/generate_204
    interval: 300
    tolerance: 15
    filter: "(?i)(🇭🇰|\\bHK\\b|Hong\\s?Kong|香港)"

  - name: ♻️ 日本自动
    type: url-test
    include-all: true
    url: https://www.gstatic.com/generate_204
    interval: 300
    tolerance: 15
    filter: "(?i)(🇯🇵|\\bJP\\b|Japan|日本)"

  - name: ♻️ 狮城自动
    type: url-test
    include-all: true
    url: https://www.gstatic.com/generate_204
    interval: 300
    tolerance: 15
    filter: "(?i)(🇸🇬|\\bSG\\b|Singapore|新加坡|狮城)"

  - name: ♻️ 美国自动
    type: url-test
    include-all: true
    url: https://www.gstatic.com/generate_204
    interval: 300
    tolerance: 15
    filter: "(?i)(🇺🇸|\\bUS(A)?\\b|United\\s?States|America|美国)"

  - name: ♻️ 自动选择
    type: url-test
    include-all: true
    url: https://www.gstatic.com/generate_204
    interval: 300
    tolerance: 15
    filter: "^((?!(直连|中国|CN|China|回国|国内)).)*$"

  - name: 🌐 全部节点
    type: select
    include-all: true
    proxies: [直连]

  - name: 🆎  ADBlock
    type: select
    proxies: [REJECT, 🎯 直连]

# ---------- 规则 ----------
rules:
  - DOMAIN-SUFFIX,bbong9.cn,🎯 直连
  - DOMAIN,younoyes.com,🎯 直连
  - DOMAIN,challenges.cloudflare.com,🚀 默认代理
  - DOMAIN-SUFFIX,niceduck.lol,🚀 默认代理
  - DOMAIN-SUFFIX,qichiyu.com,🚀 默认代理
  - RULE-SET,private_domain,直连
  - RULE-SET,Apple-CN,🍎 Apple
  - RULE-SET,Apple,🍎 Apple
  - RULE-SET,proxylite,🚀 默认代理
  - RULE-SET,ai,🤖 ChatGPT
  - RULE-SET,github_domain,👨🏿‍💻 GitHub
  - RULE-SET,youtube_domain,📹 YouTube
  - RULE-SET,google_domain,🍀 Google
  - RULE-SET,speedtest_domain,✈️ Speedtest
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,netflix_domain,🎥 NETFLIX
  - RULE-SET,gfw_domain,🚀 默认代理
  - RULE-SET,geolocation-!cn,🚀 默认代理
  - RULE-SET,PTPROXY,🚀 默认代理
  - RULE-SET,cn_domain,🎯 直连
  - RULE-SET,cn_ip,🎯 直连
  - RULE-SET,google_ip,🍀 Google,no-resolve
  - RULE-SET,netflix_ip,🎥 NETFLIX,no-resolve
  - RULE-SET,telegram_ip,📲 Telegram,no-resolve
  - RULE-SET,Advertising_domain,🆎  ADBlock
  - RULE-SET,Steam,🎮 Steam
  - RULE-SET,PTDIRECT,🎯 直连
  - MATCH,🐟 漏网之鱼

# ---------- 规则集锚点 ----------
rule-anchor:
  ip: &ip
    type: http
    interval: 86400
    behavior: ipcidr
    format: mrs
  domain: &domain
    type: http
    interval: 86400
    behavior: domain
    format: mrs
  class: &class
    type: http
    interval: 86400
    behavior: classical
    format: text
  class2: &class2
    type: http
    interval: 86400
    behavior: classical
    format: yaml
  domain2: &domain2
    type: http
    interval: 86400
    behavior: domain
    format: yaml

# ---------- 规则集引用（走代理拉取，避免卡住） ----------
rule-providers:
  private_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"
    path: ./ruleset/private.mrs
    proxy: 🚀 默认代理

  Advertising_domain:
    <<: *domain2
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Advertising/Advertising_Domain.yaml"
    path: ./ruleset/Adblock1.yaml
    proxy: 🚀 默认代理

  proxylite:
    <<: *class
    url: "https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/main/proxy.list"
    path: ./ruleset/proxylite.list
    proxy: 🚀 默认代理

  Apple-CN:
    <<: *domain
    url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple-cn.mrs"
    path: ./ruleset/APPLECN.mrs
    proxy: 🚀 默认代理

  Apple:
    <<: *domain
    url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple.mrs"
    path: ./ruleset/APPLE.mrs
    proxy: 🚀 默认代理

  ai:
    <<: *domain
    url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-!cn.mrs"
    path: ./ruleset/chatgpt.mrs
    proxy: 🚀 默认代理

  youtube_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"
    path: ./ruleset/youtube.mrs
    proxy: 🚀 默认代理

  google_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"
    path: ./ruleset/google.mrs
    proxy: 🚀 默认代理

  github_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"
    path: ./ruleset/github.mrs
    proxy: 🚀 默认代理

  telegram_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"
    path: ./ruleset/telegram.mrs
    proxy: 🚀 默认代理

  netflix_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"
    path: ./ruleset/netflix.mrs
    proxy: 🚀 默认代理

  speedtest_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"
    path: ./ruleset/ookla-speedtest.mrs
    proxy: 🚀 默认代理

  gfw_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"
    path: ./ruleset/gfw.mrs
    proxy: 🚀 默认代理

  geolocation-!cn:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"
    path: ./ruleset/geolocation-not-cn.mrs
    proxy: 🚀 默认代理

  cn_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"
    path: ./ruleset/cn.mrs
    proxy: 🚀 默认代理

  cn_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"
    path: ./ruleset/cn_ip.mrs
    proxy: 🚀 默认代理

  google_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"
    path: ./ruleset/google_ip.mrs
    proxy: 🚀 默认代理

  telegram_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"
    path: ./ruleset/telegram_ip.mrs
    proxy: 🚀 默认代理

  netflix_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"
    path: ./ruleset/netflix_ip.mrs
    proxy: 🚀 默认代理

  Steam:
    <<: *domain
    url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/steam.mrs"
    path: ./ruleset/steam.mrs
    proxy: 🚀 默认代理

  PTDIRECT:
    <<: *class2
    url: "https://raw.githubusercontent.com/bbong9/Openwrt/refs/heads/main/PT/PT-DIRECT.yaml"
    path: ./ruleset/PT-DIRECT.yaml
    proxy: 🚀 默认代理

  PTPROXY:
    <<: *class2
    url: "https://raw.githubusercontent.com/bbong9/Openwrt/refs/heads/main/PT/PT-PROXY.yaml"
    path: ./ruleset/PT-PROXY.yaml
    proxy: 🚀 默认代理

  Docker:
    <<: *class2
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Docker/Docker.yaml"
    path: ./ruleset/Docker.yaml
    proxy: 🚀 默认代理
